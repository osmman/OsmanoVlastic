
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package server.print.topdown;

import server.print.emailsender.MessageWrapper;

import javax.annotation.Resource;
import javax.jms.*;
import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2013-12-17T09:48:28.956+01:00
 * Generated source version: 2.7.7
 */

@javax.jws.WebService(
        serviceName = "printServiceV2",
        portName = "TextPort",
        targetNamespace = "http://www.printservicev2.org/",
        wsdlLocation = "classpath:top-down-PrintService.wsdl",
        endpointInterface = "server.print.topdown.PrintServiceV2")

public class PrintServiceV2Impl implements PrintServiceV2
{

    @Resource(mappedName = "java:/ConnectionFactory")
    private ConnectionFactory connectionFactory;

    @Resource(mappedName = "java:/queue/SendEmailQueue")
    private Queue queue;

    private static final Logger LOG = Logger.getLogger(PrintServiceV2Impl.class.getName());

    /* (non-Javadoc)
     * @see server.print.topdown.PrintServiceV2#printReservation(server.print.topdown.Reservation  printReservation ,)java.lang.String  email )*
     */
    public void printReservation(Reservation printReservation, java.lang.String email) throws PrintException
    {
        LOG.info("Executing operation printReservation");
        System.out.println(printReservation);
        System.out.println(email);

        /**
         * @todo vytvorit soubor
         */
        try {
            sendEmail(printReservation, email);
        } catch (JMSException ex) {
            ex.printStackTrace();
            throw new PrintException();
        }
    }

    private void sendEmail(Reservation reservation, String email) throws JMSException
    {
        Connection connection = connectionFactory.createConnection();
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        MessageProducer messageProducer = session.createProducer(queue);

        ObjectMessage objectMessage = session.createObjectMessage();
        objectMessage.setObject(new MessageWrapper(email));
        messageProducer.send(objectMessage);
    }

}
